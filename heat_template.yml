heat_template_version: 2013-05-23

description: Simple template to deploy a bastion host with the CLI tools

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
  image:
    type: string
    label: Image Name
    default: ubuntu
    description: Image to be used for compute instance
  instance_type:
    type: string
    label: Instance Type
    default: m1.large
    description: Type of instance (flavor) to be used
  network:
    type: string
    label: Network Name
    default: private
    description: Network name to associate server with
  public_net:
    type: string
    label: Public Network
    default: public
    description: Network name for Floating IPs
  tenant_name:
    type: string
    label: Tenant Project Name
    default: admin
  user_name:
    type: string
    label: Tenant User Name
    default: admin
  user_pass:
    type: string
    label: Tenant User Password
    default: admin1

  # floating_ip_id:
  #   type: string
  #   label: ID of Floating IP

resources:
  cloud_tools:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: server_1_port }
      name: { get_param: user_name }
      admin_user: ubuntu
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            #
            # Setup a CentOS VM with the OpenStack Cloud Tools

            user=`ls /home | head -1`
            # Create a local password
            passwd $user <<EOF
            DiffiCultPassWordToRemember
            DiffiCultPassWordToRemember
            EOF

            cat >> ~/.bash_profile <<EOF
            export PS1='[\u@\h \W($user_name@$tenant_name)]\$ '
            EOF

          params:
            $tenant_name: { get_param: tenant_name}
            $user_name: { get_param: user_name }
            $password: { get_param: user_pass }

  server_1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
  server_1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
  server_1_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: server_1_floating_ip }
      port_id: { get_resource: server_1_port }

  # server_1_floating_ip_association:
  #   type: OS::Neutron::FloatingIPAssociation
  #   properties:
  #     floatingip_id: { get_param: floating_ip_id }
  #     port_id: { get_resource: server_1_port }

outputs:
  floating_ip:
    description: The Floating IP address of the deployed server
    value: { get_attr: [server_1_floating_ip, floating_ip_address] }
  server_info:
    description: values of server
    value: { get_attr: [cloud_tools, show]}
